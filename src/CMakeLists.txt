CMAKE_MINIMUM_REQUIRED (VERSION 3.2)

PROJECT(TYPEWRITER_EXECUTABLES)

IF (NOT DEFINED MAIN_PROJECT_DIR)
    MESSAGE(FATAL_ERROR "MAIN_PROJECT_DIR IS NOT DEFINED")
ENDIF()

INCLUDE(${CMAKE_SCRIPTS}/WavResourcesToSources.cmake)
INCLUDE(${CMAKE_SCRIPTS}/ClangFormat.cmake)

SET(TARGET_KB_READER ${PROJECT_NAME}_KB_READER)
SET(TARGET_TW_SOUND ${PROJECT_NAME}_TW_SND)

SET(EXTRA_COMPILATION_FLAGS -O3
                            -Wall                   
                            -Werror                 
                            -Wpedantic              
                            -Wextra                 
                            -Wconversion            
                            -Wcast-align            
                            -Wunused                
                            -Wshadow                
                            -Wold-style-cast        
                            -Wpointer-arith         
                            -Wcast-qual             
                            -Wno-missing-braces)


FILE(GLOB_RECURSE SOURCES_KB         ${MAIN_SOURCES_DIR}/keyboard/*.cpp  )
FILE(GLOB_RECURSE SOURCES_OS         ${MAIN_SOURCES_DIR}/os_linux/*.cpp  )
FILE(GLOB_RECURSE SOURCES_SOUND      ${MAIN_SOURCES_DIR}/sound/*.cpp     )
FILE(GLOB_RECURSE SOURCES_TYPEWRITER ${MAIN_SOURCES_DIR}/typewriter/*.cpp)

FILE(GLOB_RECURSE SOURCES_ALL ${MAIN_SOURCES_DIR}/*.cpp)
FILE(GLOB_RECURSE HEADERS_ALL ${MAIN_INCLUDE_DIR}/*.hpp)

SET(MAIN_KB_READER ${MAIN_SOURCES_DIR}/kb_reader.cpp)
SET(MAIN_TW_SOUND ${MAIN_SOURCES_DIR}/typewriter_sound_player.cpp)

SET(SOURCES_KB_READER ${SOURCES_KB} ${SOURCES_OS})
SET(SOURCES_TW_SOUND ${SOURCES_SOUND} ${SOURCES_TYPEWRITER} ${SOURCES_OS})

IF (DEFINED INJECT_ASSETS)
    WAV_ASSETS_TO_SOURCES(SOURCES_GENERATED ${OUTPUT_DIR})
    CREATE_CLANG_FORMAT_TARGET(SOURCES_ALL)
    CREATE_CLANG_FORMAT_TARGET(HEADERS_ALL)
ELSE()
    SET(SOURCES_GENERATED)
ENDIF()

ADD_EXECUTABLE(${TARGET_KB_READER} ${MAIN_KB_READER} ${SOURCES_KB_READER} ${SOURCES_GENERATED})
ADD_DEPENDENCIES(${TARGET_KB_READER} CLANG_FORMAT_TARGET)


ADD_EXECUTABLE(${TARGET_TW_SOUND} ${MAIN_TW_SOUND} ${SOURCES_TW_SOUND} ${SOURCES_GENERATED})
TARGET_LINK_LIBRARIES(${TARGET_TW_SOUND} -lSDL2 -lSDL2_mixer -lrt)
ADD_DEPENDENCIES(${TARGET_KB_READER} CLANG_FORMAT_TARGET)

IF (INJECT_ASSETS)
    TARGET_COMPILE_DEFINITIONS(${TARGET_TW_SOUND} PRIVATE INJECT_ASSETS)
ENDIF()
IF (DEFINED APPLICATION_FIXED_ABS_PATH)
    TARGET_COMPILE_DEFINITIONS(${TARGET_TW_SOUND} PRIVATE 
        APPLICATION_FIXED_ABS_PATH="${APPLICATION_FIXED_ABS_PATH}/")
ENDIF()


SET_TARGET_PROPERTIES (
    ${TARGET_KB_READER} 
    ${TARGET_TW_SOUND}
    PROPERTIES
        CXX_STANDARD        20
        INCLUDE_DIRECTORIES ${MAIN_INCLUDE_DIR}
        COMPILE_FLAGS       ${EXTRA_COMPILATION_FLAGS}
)
