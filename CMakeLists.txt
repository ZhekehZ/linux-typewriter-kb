CMAKE_MINIMUM_REQUIRED (VERSION 3.2)

PROJECT (TYPEWRITER_KB_MAIN)

SET(MAIN_PROJECT_DIR   ${CMAKE_CURRENT_LIST_DIR})

SET(MAIN_ASSETS_DIR    ${MAIN_PROJECT_DIR}/assets)
SET(MAIN_INCLUDE_DIR   ${MAIN_PROJECT_DIR}/include)
SET(MAIN_SOURCES_DIR   ${MAIN_PROJECT_DIR}/src)
SET(MAIN_CMAKE         ${MAIN_PROJECT_DIR}/cmake/)
SET(CMAKE_SCRIPTS      ${MAIN_CMAKE}/scripts)
SET(OUTPUT_DIR         ${CMAKE_BINARY_DIR})
SET(MAIN_TEMPLATES_DIR ${MAIN_PROJECT_DIR}/templates/)
SET(MAIN_SCRIPTS_DIR   ${MAIN_PROJECT_DIR}/scripts/)
SET(GEXT_SOURCES_DIR   ${MAIN_PROJECT_DIR}/gnome_extension_src) 

ADD_SUBDIRECTORY(src)
INCLUDE(${MAIN_CMAKE}/Config.cmake)

SET(DEB_PKG_DIR        ${OUTPUT_DIR}/typewriter_keyboard) 
SET(DEB_PKG_DEBIAN_DIR ${DEB_PKG_DIR}/DEBIAN/)
SET(DEB_PKG_OPT_DIR    ${DEB_PKG_DIR}/opt/typewriter_keyboard/)
SET(DEB_PKG_MAIN_DIR   ${DEB_PKG_DIR}/usr/bin/)

SET(GEXT_DIR           ${OUTPUT_DIR}/${GNOME_EXTENSION_NAME}) 


ADD_CUSTOM_TARGET(CREATE_DEB_TREE
                  COMMAND mkdir -p ${DEB_PKG_DEBIAN_DIR}
                  COMMAND mkdir -p ${DEB_PKG_OPT_DIR}
                  COMMAND mkdir -p ${DEB_PKG_MAIN_DIR}
                  COMMAND cp ${OUTPUT_DIR}/src/TYPEWRITER_EXECUTABLES_KB_READER ${DEB_PKG_OPT_DIR}/kb_read
                  COMMAND cp ${OUTPUT_DIR}/src/TYPEWRITER_EXECUTABLES_TW_SND ${DEB_PKG_OPT_DIR}/tw_snd
                  COMMAND cp ${MAIN_SCRIPTS_DIR}/run_separate.sh ${DEB_PKG_MAIN_DIR}/typewriter-kb
                  COMMAND cp ${MAIN_SCRIPTS_DIR}/prerm ${DEB_PKG_DEBIAN_DIR}/prerm
                  COMMAND chmod 775 ${DEB_PKG_DEBIAN_DIR}/prerm)
ADD_DEPENDENCIES(CREATE_DEB_TREE TYPEWRITER_EXECUTABLES_KB_READER 
                                 TYPEWRITER_EXECUTABLES_TW_SND)

ADD_CUSTOM_TARGET(GENERATE_DEB_CONTROL ALL ${CMAKE_COMMAND}
    -DDEB_DIR=${DEB_PKG_DIR}
    -DDEB_EXECUTABLES_DIR=${DEB_PKG_OPT_DIR}
    -DDEB_CONTROL_PATH=${DEB_PKG_DEBIAN_DIR}
    -DMAIN_CMAKE=${MAIN_CMAKE}
    -DMAIN_TEMPLATES_DIR=${MAIN_TEMPLATES_DIR}
    -DMAIN_SCRIPTS_DIR=${MAIN_SCRIPTS_DIR}
    -P ${CMAKE_SCRIPTS}/GenerateDebControl.cmake)
ADD_DEPENDENCIES(GENERATE_DEB_CONTROL CREATE_DEB_TREE)

                                 
ADD_CUSTOM_TARGET(DEB_PACKAGE
                  COMMAND dpkg-deb --build ${DEB_PKG_DIR}
                  WORKING_DIRECTORY ${OUTPUT_DIR})
ADD_DEPENDENCIES(DEB_PACKAGE GENERATE_DEB_CONTROL)


ADD_CUSTOM_TARGET(CREATE_GEXT_TREE
                  COMMAND mkdir -p ${GEXT_DIR}
                  COMMAND cp ${MAIN_ASSETS_DIR}/typewriter.svg ${GEXT_DIR}/typewriter-symbolic.svg
                  COMMAND cp -r ${GEXT_SOURCES_DIR}/* ${GEXT_DIR} )

ADD_CUSTOM_TARGET(GENERATE_GEXT_METADATA ALL ${CMAKE_COMMAND}
                  -DMAIN_TEMPLATES_DIR=${MAIN_TEMPLATES_DIR}
                  -DGEXT_DIR=${GEXT_DIR}
                  -DMAIN_CMAKE=${MAIN_CMAKE}
                  -P ${CMAKE_SCRIPTS}/GenerateGExtMetadata.cmake)
ADD_DEPENDENCIES(GENERATE_GEXT_METADATA CREATE_GEXT_TREE)


ADD_CUSTOM_TARGET(GNOME_EXTENSION
                  COMMAND zip -jD ${GNOME_EXTENSION_NAME}.zip ${GNOME_EXTENSION_NAME}/*
                  WORKING_DIRECTORY ${OUTPUT_DIR})
ADD_DEPENDENCIES(GNOME_EXTENSION GENERATE_GEXT_METADATA)
